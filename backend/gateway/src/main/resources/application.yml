server:
  port: 8080

spring:
  application:
    name: gateway-service

  cloud:
    gateway:
      discovery:
        locator:
          enabled: true
          lower-case-service-id: true
      routes:
        # Security Service - All public
        - id: security-service
          uri: lb://security-service
          predicates:
            - Path=/api/auth/**
          filters:
            - StripPrefix=1

        # Catalog Service - Public product browsing
        - id: catalog-service-public
          uri: lb://catalog-service
          predicates:
            - Path=/api/catalog/products/**, /api/catalog/categories/**
          filters:
            - StripPrefix=1

        # Catalog Service - Admin only (product management)
        - id: catalog-service-admin
          uri: lb://catalog-service
          predicates:
            - Path=/api/catalog/admin/**
          filters:
            - StripPrefix=1
            - name: AuthenticationFilter
            - name: RoleBasedAuthorizationFilter
              args:
                required-roles: ADMIN

        # Order Service - User access (own orders only)
        - id: order-service-user
          uri: lb://order-service
          predicates:
            - Path=/api/orders/**
          filters:
            - StripPrefix=1
            - name: AuthenticationFilter
            - name: RoleBasedAuthorizationFilter
              args:
                required-roles: USER,CUSTOMER

        # Order Service - Admin access (all orders)
        - id: order-service-admin
          uri: lb://order-service
          predicates:
            - Path=/api/orders/admin/**
          filters:
            - StripPrefix=1
            - name: AuthenticationFilter
            - name: RoleBasedAuthorizationFilter
              args:
                required-roles: ADMIN

        # Cart Service - Authenticated users only
        - id: cart-service
          uri: lb://cart-service
          predicates:
            - Path=/api/cart/**
          filters:
            - StripPrefix=1
            - name: AuthenticationFilter
            - name: RoleBasedAuthorizationFilter
              args:
                required-roles: USER,CUSTOMER

      default-filters:
        - DedupeResponseHeader=Access-Control-Allow-Credentials Access-Control-Allow-Origin
        - AddResponseHeader=Access-Control-Allow-Origin, *
        - AddResponseHeader=Access-Control-Allow-Methods, GET,POST,PUT,DELETE,OPTIONS
        - AddResponseHeader=Access-Control-Allow-Headers, *
        - AddResponseHeader=Access-Control-Max-Age, 3600

  security:
    oauth2:
      resourceserver:
        jwt:
          jwk-set-uri: http://localhost:8081/auth/.well-known/jwks.json

---
spring:
  config:
    activate:
      on-profile: docker

  security:
    oauth2:
      resourceserver:
        jwt:
          jwk-set-uri: http://security-service:8081/auth/.well-known/jwks.json

management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics
  endpoint:
    health:
      show-details: always

eureka:
  client:
    service-url:
      defaultZone: http://localhost:8761/eureka/
    fetch-registry: true
    register-with-eureka: true
  instance:
    prefer-ip-address: true
    lease-renewal-interval-in-seconds: 10
    lease-expiration-duration-in-seconds: 30

logging:
  level:
    "[org.springframework.cloud.gateway]": DEBUG
    "[org.springframework.security]": DEBUG
    "[com.ecommerce.gateway]": DEBUG

---
spring:
  config:
    activate:
      on-profile: docker

eureka:
  client:
    service-url:
      defaultZone: http://eureka-server:8761/eureka/
  instance:
    prefer-ip-address: false
    hostname: gateway
